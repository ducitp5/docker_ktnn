version: "3.8"

services:
    nginx:
        container_name: nginx
        image: nginx:latest
        restart: always
        ports:
            - "${NGINX_PORT}:80"
            - "${NGINX_SSL_PORT}:443"
        volumes:
            - ./www:/var/www/${APP_NAME}
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./nginx/logs:/var/log/nginx
        links:
            - php
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        networks:
            - main_network
    php:
        container_name: php
        image: php:8.2.7-fpm
        restart: always
        ports:
            - "${PHP_PORT}:9000"
        volumes:
            - ./www:/var/www/${APP_NAME}
            - ./php/php.ini:/usr/local/etc/php/php.ini
            - ./php/supervisord.conf:/etc/supervisor/supervisord.conf
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        networks:
            - main_network
    memcached:
        container_name: memcached
        image: memcached:latest
        restart: always
        ports:
            - "${MEMCACHED_PORT}:11211"
        build:
            context: .
            dockerfile: ./docker/memcached/Dockerfile
        networks:
            - main_network
    mysql:
        container_name: mysql
        image: mysql:latest
        restart: always
        ports:
            - "${MYSQL_PORT}:3306"
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        volumes:
            - ./mysql/init:/docker-entrypoint-initdb.d
            - ./mysql/data:/var/lib/mysql
            - ./mysql/logs:/var/log/mysql
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            PMA_ARBITRARY: 1
        build:
            context: .
            dockerfile: ./docker/mysql/Dockerfile
        networks:
            - main_network
    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin:latest
        restart: always
        ports:
            - "${PMA_PORT}:80"
        depends_on:
            - mysql
        environment:
            PMA_HOST: mysql
            PMA_PORT: 3306
            MYSQL_ROOT_PASSWORD:
            UPLOAD_LIMIT: 750M
        build:
            context: .
            dockerfile: ./docker/phpmyadmin/Dockerfile
        networks:
            - main_network
    solr:
        container_name: solr
        image: solr:8.11.2
        restart: always
        ports:
            - "${SOLR_PORT}:8983"
        volumes:
            - ./solr/data:/var/solr/data
            - ./solr/logs:/var/solr/logs
            - ./docker/solr/lib:/opt/solr/server/solr/lib
        command:
            - solr-precreate
            - test
        build:
            context: .
            dockerfile: ./docker/solr/Dockerfile
        networks:
            - main_network
    redis:
        container_name: redis
        image: redis:latest
        restart: always
        ports:
            - ${REDIS_PORT}:6379
        volumes:
            - ./redis/data:/data
        build:
            context: .
            dockerfile: ./docker/redis/Dockerfile
        networks:
            - main_network
networks:
    main_network:
        name: main_network
        driver: bridge
